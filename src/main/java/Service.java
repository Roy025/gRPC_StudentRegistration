import com.company.grpc.register.User;
import com.company.grpc.register.userGrpc;
import io.grpc.stub.StreamObserver;
import java.sql.*;

import static java.sql.DriverManager.getConnection;

public class Service extends userGrpc.userImplBase {



    @Override
    public void login(User.LoginRequest request, StreamObserver<User.APIResponse> responseObserver) throws SQLException, ClassNotFoundException {
        System.out.println("Inside Login");
        String username = request.getUsername();
        String password = request.getPassword();
//A ResultSet object is a table of data representing a database result set,
// which is usually generated by executing a statement that queries the database.
        Class.forName("com.mysql.cj.jdbc.Driver");//Connecting to MySQL Using the JDBC DriverManager Interface
        Connection connection = getConnection("jdbc:mysql://localhost/student_register", "root", "");
        PreparedStatement prep = connection.prepareStatement("SELECT EXISTS(SELECT * FROM loginrequest WHERE username = ? && password = ?)");
        prep.setString(1, username);
        prep.setString(2, password);
        ResultSet result = prep.executeQuery();
        User.APIResponse.Builder response = User.APIResponse.newBuilder();
        while (result.next()) {// returns a boolean value specifying whether the ResultSet object contains more rows.
            //getInt(String columnLabel) = Retrieves the value of the designated column in the current row of this ResultSet object as an int in the Java programming language.
            if (result.getInt(1) == 1) {
                response.setResponseCode(0).setResponsemessage("User already Logged in.");
            } else {
                PreparedStatement preparedStatement = connection.prepareStatement("INSERT INTO loginrequest VALUES('"+username+"', '"+password+"')");
                preparedStatement.executeUpdate();
                response.setResponseCode(1).setResponsemessage(username + " successfully logged in.");
            }
            break;
        }
        responseObserver.onNext(response.build());
        responseObserver.onCompleted();
    }





    @Override
        public void register (User.RegRequest request, StreamObserver < User.regResponse > responseObserver) throws SQLException {
            System.out.println("Inside Register");
            String name = request.getName();
            int RegID = request.getRegID();
//A ResultSet object is a table of data representing a database result set,
// which is usually generated by executing a statement that queries the database.
            Connection connection = getConnection("jdbc:mysql://localhost/student_register", "root", "");
            PreparedStatement prep = connection.prepareStatement("SELECT EXISTS(SELECT * FROM regrequest WHERE name = ? && RegID = ?)");
            prep.setString(1, name);
            prep.setInt(2, RegID);
            ResultSet result = prep.executeQuery();
            User.regResponse.Builder regresponse = User.regResponse.newBuilder();
            while (result.next()) {// returns a boolean value specifying whether the ResultSet object contains more rows.
                //getInt(String columnLabel) = Retrieves the value of the designated column in the current row of this ResultSet object as an int in the Java programming language.
                if (result.getInt(1) == 1) {
                    regresponse.setResponseCode(0).setResponsemessage("Registration ID " + RegID + " is already registered.");
                }
                else{
                    PreparedStatement preparedStatement = connection.prepareStatement("INSERT INTO regrequest VALUES('"+name+"', '"+RegID+"')");
                    preparedStatement.executeUpdate();
                    regresponse.setResponseCode(1).setResponsemessage(name +"  " + RegID + " successfully registered.");
                }
                    break;
                }
                responseObserver.onNext(regresponse.build());
                responseObserver.onCompleted();
            }






        public void logout (User.Empty request, StreamObserver < User.APIResponse > responseObserver){
        System.out.println("Inside logout");
    }

}

